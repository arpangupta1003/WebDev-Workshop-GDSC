.grid, .grid1, .inline-grid{
    /* display grid initializes grid */
    display: grid;
    height: 50vh;
    width: 50vw;
    margin: 20px 0;
    border: 1px solid black;
    /* grid column gap gives the gap between two columns in a grid */
    grid-column-gap: 10px;
    /* grid row gap gives the gap between two rows in a grid */
    grid-row-gap: 20px;
}
.grid{
    /* grid template columns is used to specify the columns */
    /* auto auto sets columns to two and width is taken automatically */
    grid-template-columns: auto auto auto;
    
}
.grid1{
    height: 40vh;
    margin: 20px;
    /* grid template rows is used to specify the rows
    auto auto sets rows to two and width is taken automatically */
    grid-template-rows: 100px 100px;
    grid-template-columns: auto auto auto auto;
}
.inline-grid{
    /* grid tempelate columns is used to specify the columns */
    /* auto auto sets columns to two and width is taken automatically */
    grid-template-columns: auto auto auto;
    /* initializes inline grid */
    display: inline-grid;
    width: 25vw;
    margin: 20px;
    /* we can also specify the column width by placing values instead of using auto */
    grid-template-columns: 100px 100px 100px;
}
.item, .item0, .item1, .item2, .item3,.item4{
    display: flex;
    justify-content: center;
    align-items: center;
    border: 2px solid black;
    margin: 10px;
}
.item1{
    /* grid row start and end can specify the lines from which an element will start and another will end*/
    grid-row-start: 1;
    grid-row-end: 3;
}
.item2{
    /* grid column start and end can specify the lines from which an element will start and another will end*/
    grid-column-start: 1;
    grid-column-end: 3;
}
/* Rest properties we can use the justify content, align items as of flexbox */
.item3{
    /* grid column and grid row can be used instead of grid start and grid end properties of column and rows */
    grid-column: 2/4;
}
.item4{
    grid-row: 3/5;
}
.item0{
    grid-row: 2/span 2;
}